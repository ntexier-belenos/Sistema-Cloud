#!/bin/bash

echo "======================================================"
echo "üîÑ V√©rification des services PostgreSQL disponibles..."
echo "======================================================"

# V√©rifier si Docker fonctionne
if ! docker info &>/dev/null; then
    echo "‚ùå Docker n'est pas accessible. V√©rifiez les points suivants :"
    echo "   1. Docker est bien install√© et en cours d'ex√©cution"
    echo "   2. Vous avez les permissions pour acc√©der au socket Docker"
    echo "   3. Le socket Docker est correctement mont√© dans le conteneur"
    echo ""
    echo "   Pour r√©soudre ce probl√®me, vous pouvez :"
    echo "   - V√©rifier que le fichier devcontainer.json contient bien le montage :"
    echo "     \"mounts\": [\"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind\"]"
    echo "   - Ex√©cuter 'sudo chmod 666 /var/run/docker.sock' sur l'h√¥te"
    echo "======================================================"
    exit 1
fi

# V√©rifier si un conteneur PostgreSQL est d√©j√† en cours d'ex√©cution sur le port 5432
DB_CHECK=$(docker ps --filter publish=5432 -q)

if [ -n "$DB_CHECK" ]; then
    CONTAINER_ID=$(docker ps --filter publish=5432 -q)
    CONTAINER_NAME=$(docker ps --filter id=$CONTAINER_ID --format '{{.Names}}')
    echo "‚úÖ PostgreSQL d√©j√† disponible dans le conteneur: $CONTAINER_NAME (ID: $CONTAINER_ID)"
    echo "   Pour vous connecter: postgresql://sistema:sistema@localhost:5432/sistema_cloud"
else
    echo "üöÄ Lancement d'un conteneur PostgreSQL pour d√©veloppement..."
    
    # V√©rifier si le conteneur existe mais est arr√™t√©
    STOPPED_CONTAINER=$(docker ps -a --filter name=sistema-postgres -q)
    if [ -n "$STOPPED_CONTAINER" ]; then
        echo "‚úã Conteneur PostgreSQL existant trouv√© mais arr√™t√©, red√©marrage..."
        docker start sistema-postgres
    else
        # Cr√©er un volume s'il n'existe pas d√©j√†
        docker volume inspect sistema_pgdata >/dev/null 2>&1 || docker volume create sistema_pgdata
        
        # Lancer PostgreSQL avec Docker
        docker run --name sistema-postgres \
            -e POSTGRES_USER=sistema \
            -e POSTGRES_PASSWORD=sistema \
            -e POSTGRES_DB=sistema_cloud \
            -p 5432:5432 \
            -v sistema_pgdata:/var/lib/postgresql/data \
            -d postgres:15
    fi
    
    # V√©rifier si le lancement a r√©ussi
    if [ $? -eq 0 ]; then
        echo "‚úÖ PostgreSQL a √©t√© d√©marr√© avec succ√®s!"
        echo "   Pour vous connecter: postgresql://sistema:sistema@localhost:5432/sistema_cloud"
    else
        echo "‚ùå Erreur lors du d√©marrage de PostgreSQL"
        echo "   Essayez de d√©marrer la base de donn√©es manuellement:"
        echo "   docker-compose -f /workspace/db-compose.yml up -d"
    fi
fi

echo "======================================================"
